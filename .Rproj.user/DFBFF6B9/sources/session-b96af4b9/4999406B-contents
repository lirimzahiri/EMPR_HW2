---
title: "Homework 2 - Exploratory Data Analysis"
author: "Mouad Medini & Lirim Zahiri"
date: "`r Sys.Date()`"
output: html_document
---

```{r setup, include=FALSE}
# Initial Setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)  # Main library for data analysis
library(ggplot2) # Package for visualization
library(ggridges)
library(nycflights13)  # Dataset for tasks 1-3
library(readxl)  # For Excel imports
```

# Task 1: Days with temperatures below 10°C at Newark Airport

```{r task1}
# Exploring the weather dataset
glimpse(weather)
?weather

# Filter and count for temperatures below 10°C (10° in Fahrenheit = 50) at Newark (EWR)
weather |>
  filter(origin == "EWR", temp < 50) |>
  group_by(month, date = as.Date(time_hour)) |>
  summarize(days_below_10 = n(), .groups = "drop") |>
  count(month, name = "days_below_10")
```

*(Slides used: EMPR_05_Data_Transformation_I_AS2024.pdf, EMPR_08a_EDA_AS2024.pdf)*

# Task 2: Analyze flights missing `dep_time`

```{r task2}
# Flights with missing `dep_time` in january
flights |>
  filter(month == 1, is.na(dep_time))

# flights |>
#   filter(month == 1, is.na(dep_time)) |>
#   summarize(across(everything(), ~ sum(is.na(.)) > 0)) |>
#   pivot_longer(cols = everything(), names_to = "variable", values_to = "is_missing") |>
#   filter(is_missing == TRUE)
```

*(Slides used: EMPR_05_Data_Transformation_I_AS2024.pdf)*

# Task 3: Visualizing temperatures

```{r task3}
# Select all variables except those between year and hour
# Add the month column from time_hour
weather_filtered <- weather |>
  select(-(year:hour)) |>
  mutate(month = month(time_hour))

# Visualization a
weather_filtered |>
  mutate(month = factor(month, labels = month.name)) |> # Convert month numbers to full names
  ggplot(aes(x = temp)) +
  geom_histogram(binwidth = 5, fill = "steelblue", color = "white") +
  facet_wrap(~ month, ncol = 3) +
  labs(title = "Temperature Distribution by Month", x = "Temperature (°F)", y = "Count") +
  theme_minimal()

# Ridge plot
weather_filtered |>
  mutate(month = factor(month, labels = month.name)) |> # Convert month numbers to full names
  ggplot(aes(x = temp, y = month)) +
  geom_density_ridges(scale = 0.9, fill = "skyblue", alpha = 0.7) + # Ridge plot
  labs(
    title = "Temperature Distribution by Month (Ridge Plot)",
    x = "Temperature (°F)",
    y = "Month"
  ) +
  theme_minimal()

# Aggregate data with weather_filtered
agg_data <- weather_filtered |>
  group_by(month) |>
  summarize(
    avg_temp = mean(temp, na.rm = TRUE),
    sd_temp = sd(temp, na.rm = TRUE),
    n = n()
  )

# Plot with explicit confidence interval calculation during visualization
ggplot(agg_data, aes(x = month, y = avg_temp)) +
  geom_line(size = 1, color = "blue") +                              # Line for average temperature
  geom_ribbon(
    aes(
      ymin = avg_temp - 3 * (sd_temp / sqrt(n)),                     # Lower 99% CI
      ymax = avg_temp + 3 * (sd_temp / sqrt(n))                      # Upper 99% CI
    ),
    fill = "lightblue", alpha = 0.4
  ) +
  scale_x_continuous(breaks = 1:12, labels = 1:12) +                 # Numeric month labels
  labs(
    title = "Monthly Average Temperature with 99% Confidence Intervals",
    x = "Month (Number)", y = "Average Temperature (°F)"
  ) +
  theme_minimal()
```

*(Slides used: EMPR_03_Visualization1_AS2024.pdf, EMPR_07_Data_Tidying_AS2024,EMPR_05_Data_Transformation_I_AS2024, EMPR_08a_EDA_AS2024.pdf)*


# Task 4: Data cleaning from `Data_HW2.xlsx`
```{r task4}
# Import and cleaning the dataset
# Referenced from slides: EMPR_06_Import_Export_AS2024.pdf
data <- read_excel("Data_HW2.xlsx", sheet = "A very small sample")

"C:\Users\u243345\OneDrive - SBB\Dokumente\GitHub\EMPR_HW2\Data_HW2.xlsx"

# Cleaning and transforming the data
cleaned_data <- data |>
  # Trim spaces
  mutate(across(where(is.character), ~ str_trim(.))) |>  # Referenced from slides: EMPR_05_Data_Transformation_I_AS2024.pdf
  # Handle 'height' column (convert cm/m to numeric)
  mutate(
    height = case_when(
      str_detect(height, "cm") ~ as.numeric(str_remove(height, "cm")),
      str_detect(height, "m") ~ as.numeric(str_remove(height, "m")) * 100,
      TRUE ~ NA_real_
    ),  # Referenced from slides: EMPR_05_Data_Transformation_I_AS2024.pdf
    # Convert 'foot' and 'hair' columns to numeric
    foot = as.numeric(foot),
    hair = case_when(
      str_detect(hair, "^[0-9]+$") ~ as.numeric(hair), # Keep numeric values
      str_detect(tolower(hair), "glatze") ~ 0, # Convert 'Glatze' to 0
      TRUE ~ NA_real_ # Replace invalid entries with NA
    ),  # Referenced from slides: EMPR_05_Data_Transformation_I_AS2024.pdf
    # Extract date from 'date_of_birth' and standardize
    date_of_birth = case_when(
      str_detect(date_of_birth, "\\.") ~ as.Date(date_of_birth, format = "%d.%m.%Y"),
      TRUE ~ as.Date(date_of_birth)
    )  # Referenced from slides: EMPR_05_Data_Transformation_I_AS2024.pdf
  )
 
# Save the cleaned dataset
# Referenced from slides: EMPR_06_Import_Export_AS2024.pdf
saveRDS(cleaned_data, file = "cleaned_data.rds")
 
# Display summary of cleaned data
glimpse(cleaned_data)
```
