---
title: "Homework 2 - Exploratory Data Analysis"
author: "Mouad Medini & Lirim Zahiri"
date: "`r Sys.Date()`"
output:
  pdf_document:
    number_sections: true
    toc: true
---

```{r setup, include=FALSE}
# Initial Setup
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)  # Main library for data analysis
library(nycflights13)  # Dataset for tasks 1-3
library(readxl)  # For Excel imports
```

# Task 1: Days with temperatures below 10째C at Newark Airport

```{r task1}
# Exploring the weather dataset
glimpse(weather)
?weather

# Filter and count for temperatures below 10째C (10째 in Fahrenheit = 50) at Newark (EWR)
weather |>
  filter(origin == "EWR", temp < 50) |>
  group_by(month, date = as.Date(time_hour)) |>
  summarize(days_below_10 = n(), .groups = "drop") |>
  count(month, name = "days_below_10")
```

*(Slides used: EMPR_05_Data_Transformation_I_AS2024.pdf, EMPR_08a_EDA_AS2024.pdf)*

# Task 2: Analyze flights missing `dep_time`

```{r task2}
# Flights with missing `dep_time`
missing_dep_time <- flights |>
  filter(is.na(dep_time)) |>
  summarise(across(everything(), ~ sum(is.na(.))))
 
missing_dep_time
```

*(Slides used: EMPR_05_Data_Transformation_I_AS2024.pdf)*

# Task 3: Visualizing temperatures

```{r task3}
# Select relevant variables and visualize
# Filter, transform, and visualize the weather data
temp_plot <- weather |>
  filter(!is.na(temp)) |>  # Remove missing temperature values
  mutate(month = lubridate::month(time_hour, label = TRUE)) |>  # Extract month as a labeled factor
  ggplot(aes(x = temp, fill = as.factor(month))) +
  geom_histogram(binwidth = 5, color = "black", position = "dodge") +
  labs(
    title = "Temperature Distribution",
    x = "Temperature (째C)",
    y = "Frequency",
    fill = "Month"
  )
 
temp_plot
```

*(Slides used: EMPR_03_Visualization1_AS2024.pdf, EMPR_08a_EDA_AS2024.pdf)*

# Task 4: Data cleaning from `Data_HW2.xlsx`

```{r task4}
# Import and cleaning the dataset
# Referenced from slides: EMPR_06_Import_Export_AS2024.pdf
data <- read_excel("Data_HW2.xlsx", sheet = "A very small sample")
 
# Cleaning and transforming the data
cleaned_data <- data |>
  # Trim spaces
  mutate(across(where(is.character), ~ str_trim(.))) |>  # Referenced from slides: EMPR_05_Data_Transformation_I_AS2024.pdf
  # Handle 'height' column (convert cm/m to numeric)
  mutate(
    height = case_when(
      str_detect(height, "cm") ~ as.numeric(str_remove(height, "cm")),
      str_detect(height, "m") ~ as.numeric(str_remove(height, "m")) * 100,
      TRUE ~ NA_real_
    ),  # Referenced from slides: EMPR_05_Data_Transformation_I_AS2024.pdf
    # Convert 'foot' and 'hair' columns to numeric
    foot = as.numeric(foot),
    hair = case_when(
      str_detect(hair, "^[0-9]+$") ~ as.numeric(hair), # Keep numeric values
      str_detect(tolower(hair), "glatze") ~ 0, # Convert 'Glatze' to 0
      TRUE ~ NA_real_ # Replace invalid entries with NA
    ),  # Referenced from slides: EMPR_05_Data_Transformation_I_AS2024.pdf
    # Extract date from 'date_of_birth' and standardize
    date_of_birth = case_when(
      str_detect(date_of_birth, "\\.") ~ as.Date(date_of_birth, format = "%d.%m.%Y"),
      TRUE ~ as.Date(date_of_birth)
    )  # Referenced from slides: EMPR_05_Data_Transformation_I_AS2024.pdf
  )
 
# Save the cleaned dataset
# Referenced from slides: EMPR_06_Import_Export_AS2024.pdf
saveRDS(cleaned_data, file = "cleaned_data.rds")
 
# Display summary of cleaned data
glimpse(cleaned_data)
```

# Task 5: Anscombe's dataset

## Part (a): Transform the dataset into tidy format

```{r part_a}
# Transforming Anscombe's dataset into tidy format
# This dataset is not tidy because x and y values are stored in separate columns
# for each sample, rather than being combined with an identifier for the sample.
tidy_anscombe <- anscombe |>
  pivot_longer(
    cols = everything(),
    names_to = c(".value", "sample"),
    names_pattern = "(.)(.)"
  )
 
# Save the tidy dataset for future use
saveRDS(tidy_anscombe, file = "tidy_anscombe.rds")
```

*(Slides used: EMPR_07_Data_Tidying_AS2024.pdf)*

## Part (b): Scatterplot with best fit lines

```{r part_b}
# Load tidy dataset
tidy_anscombe <- readRDS("tidy_anscombe.rds")
 
# Scatterplot with best fit lines and differentiated shapes and colors
ggplot(tidy_anscombe, aes(x = x, y = y, color = sample, shape = sample)) +
  geom_point(size = 3) +
  geom_smooth(method = "lm", se = FALSE) +
  scale_shape_manual(values = c(12, 10, 9, 7)) +
  labs(
    title = "Anscombe's Datasets: Scatterplot with Best Fit Lines",
    x = "x",
    y = "y",
    color = "Sample",
    shape = "Sample"
  ) +
  theme_minimal()
```

*(Slides used: EMPR_03_Visualization1_AS2024.pdf)*

## Part (c): Summarize the tidy dataset

```{r part_c}
# Summary statistics: means, standard deviations, and correlation coefficients
summary_table <- tidy_anscombe |>
  group_by(sample) |>
  summarise(
    mean_x = mean(x),
    mean_y = mean(y),
    sd_x = sd(x),
    sd_y = sd(y),
    corr_xy = cor(x, y)
  )
 
# Display the summary table using base R
print(summary_table)
```

*(Slides used: EMPR_05_Data_Transformation_I_AS2024.pdf)*

## Part (d): Facet grid scatterplots

```{r part_d}
# Scatterplot with facet grid for each sample
ggplot(tidy_anscombe, aes(x = x, y = y)) +
  geom_point(aes(color = sample, shape = sample), size = 3) +
  geom_smooth(method = "lm", se = FALSE, color = "black") +
  facet_grid(. ~ sample) +
  scale_shape_manual(values = c(12, 10, 9, 7)) +
  labs(
    title = "Anscombe's Datasets: Facet Grid",
    x = "x",
    y = "y",
    color = "Sample",
    shape = "Sample"
  ) +
  theme_minimal()
```

*(Slides used: EMPR_03_Visualization1_AS2024.pdf)*

# Collaboration Description

This project was completed in collaboration between Mouad Medini and Lirim Zahiri. **Task Division:** - Data Cleaning: Mouad Medini - Visualization: Lirim Zahiri - Documentation: Both collaboratively

------------------------------------------------------------------------
